[gd_scene load_steps=15 format=3 uid="uid://c3xqaietfgs7l"]

[ext_resource type="Script" path="res://MainProject/Scripts/Game.gd" id="1_xdpfu"]
[ext_resource type="PackedScene" uid="uid://xpbhai8nlgtx" path="res://MainProject/Player.tscn" id="2_bam1a"]
[ext_resource type="PackedScene" uid="uid://dch8dyylb7526" path="res://addons/MetroidvaniaSystem/Template/Nodes/Minimap.tscn" id="3_a3gfy"]
[ext_resource type="Script" path="res://MainProject/Scripts/Camera2d.gd" id="3_qv1y7"]
[ext_resource type="Texture2D" uid="uid://cqjaapyeuqrim" path="res://MainProject/Sprites/leave-collectible.png" id="5_8l1jx"]
[ext_resource type="PackedScene" uid="uid://bts01uuiubtdr" path="res://MainProject/Scenes/pause_menu/pause_menu.tscn" id="6_bnkkc"]
[ext_resource type="FontFile" uid="uid://b4u33kyj8kn1h" path="res://MainProject/Sprites/brackeys_platformer_assets/fonts/PixelOperator8-Bold.ttf" id="7_e0ppn"]
[ext_resource type="Shader" path="res://MainProject/vignette.gdshader" id="7_wlpu2"]
[ext_resource type="Script" path="res://MainProject/health_container.gd" id="8_r6u6h"]
[ext_resource type="PackedScene" uid="uid://db41oe8hgraad" path="res://MainProject/Scenes/heart.tscn" id="9_7vwer"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pr01m"]
shader = ExtResource("7_wlpu2")
shader_parameter/inner_radius = 0.1
shader_parameter/outer_radius = 1.0
shader_parameter/vignette_strength = 1.0
shader_parameter/dither_strength = 0.08
shader_parameter/vignette_color = Color(0.113665, 0.113665, 0.113665, 1)

[sub_resource type="CanvasTexture" id="CanvasTexture_lb6gv"]

[sub_resource type="GDScript" id="GDScript_u7odr"]
resource_name = "MapWindow"
script/source = "# The window that contains a bigger map overview than minimap. Toggled with M.
extends Panel

# The size of the window in cells.
var SIZE: Vector2i

# The position where the player started (for the vector feature).
var starting_coords: Vector2i
# The offset for drawing the cells. Allows map panning.
var offset: Vector2i
# The player location node from MetSys.add_player_location()
var player_location: Node2D
# The vector feature, toggled with D. It displays an arrow from player's starting point to the current position.
# It's purely to show custom drawing on the map.
var show_delta: bool

func _ready() -> void:
	# Cellular size is total size divided by cell size.
	SIZE = size / MetSys.CELL_SIZE
	# Connect some signals.
	MetSys.cell_changed.connect(queue_redraw.unbind(1))
	MetSys.cell_changed.connect(update_offset.unbind(1)) # When player moves to another cell, move the map.
	MetSys.map_updated.connect(queue_redraw)
	# Create player location. We need a reference to update its offset.
	player_location = MetSys.add_player_location(self)

func _draw() -> void:
	for x in SIZE.x:
		for y in SIZE.y:
			# Draw cells. Note how offset is used.
			MetSys.draw_cell(self, Vector2i(x, y), Vector3i(x - offset.x, y - offset.y, MetSys.current_layer))
	# Draw shared borders and custom elements.
	if MetSys.settings.theme.use_shared_borders:
		MetSys.draw_shared_borders()
	MetSys.draw_custom_elements(self, Rect2i(-offset.x, -offset.y, SIZE.x, SIZE.y))
	# Get the current player coordinates.
	var coords := MetSys.get_current_flat_coords()
	# If the delta vector (D) is enabled and player isn't on the starting position...
	if show_delta and coords != starting_coords:
		var start_pos := MetSys.get_cell_position(starting_coords + offset)
		var current_pos := MetSys.get_cell_position(coords + offset)
		# draw the vector...
		draw_line(start_pos, current_pos, Color.WHITE, 2)
		
		const arrow_size = 4
		# and arrow. This code shows how to draw custom stuff on the map outside the MetSys functions.
		draw_set_transform(current_pos, start_pos.angle_to_point(current_pos), Vector2.ONE)
		draw_primitive([Vector2(-arrow_size, -arrow_size), Vector2(arrow_size, 0), Vector2(-arrow_size, arrow_size)], [Color.WHITE], [])

func _input(event: InputEvent) -> void:
	if event is InputEventKey:
		if event.pressed:
			# Toggle visibility when pressing M.
			if event.keycode == KEY_M:
				visible = not visible
				if visible:
					update_offset()
			elif event.keycode == KEY_D:
				# D toggles position tracking (delta vector).
				show_delta = not show_delta
				queue_redraw()

func update_offset():
	# Update the map offset based on the current position.
	# Normally the offset is interactive and the player is able to move freely around the map.
	# But in this demo, the map can overlay the game and thus is updated in real time.
	offset = -MetSys.get_current_flat_coords() + SIZE / 2
	player_location.offset = Vector2(offset) * MetSys.CELL_SIZE

func reset_starting_coords():
	# Starting position for the delta vector.
	var coords := MetSys.get_current_flat_coords()
	starting_coords = Vector2i(coords.x, coords.y)
	queue_redraw()
"

[sub_resource type="GDScript" id="GDScript_66suq"]
resource_name = "PercentLabel"
script/source = "# Displays map completion percentage
extends Label

func _ready() -> void:
	# The percentage may change when map is updated.
	MetSys.map_updated.connect(update)

func _notification(what: int) -> void:
	# Update when the label is made visible. This happens when the map is toggled.
	if what == NOTIFICATION_VISIBILITY_CHANGED:
		update()

func update():
	# Only update when visible.
	if is_visible_in_tree():
		# Show the percentage.
		text = \"%03d%%\" % int(MetSys.get_explored_ratio() * 100)
"

[node name="Game" type="Node2D"]
script = ExtResource("1_xdpfu")
starting_map = "forest/ForestStartingPoint.tscn"

[node name="Vignette" type="Sprite2D" parent="."]
z_index = 20
material = SubResource("ShaderMaterial_pr01m")
position = Vector2(427, 240)
scale = Vector2(854, 480)
texture = SubResource("CanvasTexture_lb6gv")
region_rect = Rect2(2, 2, 0, 0)

[node name="Player" parent="." instance=ExtResource("2_bam1a")]
position = Vector2(368, 248)

[node name="Camera2D" type="Camera2D" parent="Player" node_paths=PackedStringArray("player")]
script = ExtResource("3_qv1y7")
player = NodePath("..")

[node name="UI" type="CanvasLayer" parent="."]

[node name="Minimap" parent="UI" instance=ExtResource("3_a3gfy")]
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -152.0
offset_top = 8.0
offset_right = -8.0
offset_bottom = 104.0
grow_horizontal = 0
display_player_location = true

[node name="Background" type="Panel" parent="UI/Minimap"]
show_behind_parent = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="MapWindow" type="Panel" parent="UI"]
visible = false
clip_contents = true
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -240.0
offset_top = -160.0
offset_right = 240.0
offset_bottom = 160.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_u7odr")

[node name="Percent" type="Label" parent="UI/MapWindow"]
layout_mode = 0
offset_left = 12.0
offset_top = 1.0
offset_right = 69.0
offset_bottom = 33.0
theme_override_fonts/font = ExtResource("7_e0ppn")
text = "0%"
horizontal_alignment = 1
vertical_alignment = 1
script = SubResource("GDScript_66suq")

[node name="Label" type="Label" parent="UI/MapWindow"]
layout_mode = 1
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_top = -33.0
offset_right = 242.0
grow_vertical = 0
theme_override_fonts/font = ExtResource("7_e0ppn")
theme_override_font_sizes/font_size = 8
text = "Press D to toggle delta vector"
horizontal_alignment = 1
vertical_alignment = 1

[node name="HBoxContainer" type="HBoxContainer" parent="UI"]
offset_left = 8.0
offset_top = 8.0
offset_right = 48.0
offset_bottom = 34.0

[node name="TextureRect" type="TextureRect" parent="UI/HBoxContainer"]
layout_mode = 2
texture = ExtResource("5_8l1jx")
expand_mode = 2
stretch_mode = 5

[node name="CollectibleCount" type="Label" parent="UI/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
theme_override_fonts/font = ExtResource("7_e0ppn")
text = "0"
vertical_alignment = 1

[node name="HealthContainer" type="HBoxContainer" parent="UI"]
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -52.0
offset_top = 8.0
offset_right = 52.0
offset_bottom = 42.0
grow_horizontal = 2
script = ExtResource("8_r6u6h")

[node name="TextureRect" type="TextureRect" parent="UI/HealthContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="HP_1" parent="UI/HealthContainer/TextureRect" instance=ExtResource("9_7vwer")]

[node name="TextureRect2" type="TextureRect" parent="UI/HealthContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="HP_2" parent="UI/HealthContainer/TextureRect2" instance=ExtResource("9_7vwer")]

[node name="TextureRect3" type="TextureRect" parent="UI/HealthContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="HP_3" parent="UI/HealthContainer/TextureRect3" instance=ExtResource("9_7vwer")]

[node name="PauseMenu" parent="UI" instance=ExtResource("6_bnkkc")]
process_mode = 3
visible = false
z_index = 20
size_flags_horizontal = 4
size_flags_vertical = 4

[connection signal="hp_changed" from="Player" to="UI/HealthContainer" method="_on_player_hp_changed"]
